# APP
APP_NAME=MiAppGo                                    # nombre de la aplicación
APP_KEY=base64:AlgunacadenacodificadaenBase64aleatoria=   # se usa para firmar/encriptar datos sensibles (debe ser una cadena aleatoria segura, preferiblemente en Base64)
APP_URL=http://localhost:8080                            # define la URL base de la aplicación (usada para generar enlaces, redirecciones, etc.)
APP_LOCALE=es                                       # define el idioma por defecto de la aplicación (ej: es, en, fr, pt)

# SERVER
SERVER_PORT=8080                                    # puerto en el que corre el servidor
SERVER_HTTPS_ENABLED=false                          # true para habilitar HTTPS, false para HTTP
SERVER_HTTPS_CERT_PATH=certs/server.crt             # ruta al certificado SSL
SERVER_HTTPS_KEY_PATH=certs/server.key              # ruta a la llave privada SSL
SERVER_TIMEOUT=60                                   # tiempo de espera en segundos


# DATABASE
DB_DATABASE=sample_mflix                            # nombre de la base de datos
DB_CONNECTION_STRING=mongodb://localhost:27017      # string de conexion con la bd
DB_MIGRATION_ENABLE=true                            # habilita las migraciones y seeds

# MAIL
MAIL_HOST=smtp.gmail.com                            # host del servidor de correo (para Gmail es smtp.gmail.com)
MAIL_PORT=587                                       # puerto para TLS en Gmail
MAIL_USERNAME=soydonbarrigon@gmail.com              # dirección de correo electrónico del remitente
MAIL_PASSWORD=qpem nazf nbku qbyx                   # contraseña o App Password de Gmail
MAIL_FROM_NAME=Don Barrigon                         # nombre del remitente que se muestra
# MAIL_IDENTITY se usa en smtp.PlainAuth como "authorization identity".
# Normalmente se deja vacío ("") para Gmail, Outlook y la mayoría de proveedores.
# Solo se usa en servidores SMTP corporativos o personalizados que permiten
# autenticarse con un usuario pero enviar en nombre de otro.
MAIL_IDENTITY=


# Otros
LOG_LEVEL=debug                                     # niveles de log: emergency, alert, critical, error, warning, notice, info, debug
